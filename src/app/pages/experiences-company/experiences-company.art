      <h1>工作经历</h1>
      <ul class="works">
        <li class="work">
          <div class="target-border">
            <div class="target-dot"></div>
          </div>
          <a href="https://www.desaysv.com/" target="blank" class="company">德赛西威</a>
          <span class="job ">前端(兼后端)工程师</span>
          <span class="time ">2017.03 - 至今 (两年)</span>
          <div class="tech-list big-screen">@Angular , typescript , Node , 性能优化 , nginx , docker , 微信小程序</div>
          <ul class="description big-screen">
            <li>前端(车联网数据云平台)
              <div>
              1) 基于 <span>@angular</span> + <span>typescript(面向对象)</span> + <span>rxjs</span> 技术栈对车联网数据云平台进行前端开发
              </div>
              <div>
              2) 通过 angular 的依赖注入 + apitree + rxjs 实现了对 api <span>数据接口进行统一封装</span>,使接口模块多系统复用,降低了接口维护成本,规范了整个开发流程,提高了开发效率
              </div>
              <div>
              3) 性能优化,配置 nginx 性能优化策略如下:
                <ul class="ul-list">
                  <li>
                    对 css、js 以及图片等资源, 配置 cache-control 缓存时间为<span>长缓存</span> 
                  </li>
                  <li>
                    对 css、js 以及 json 等文本资源进行 <span>gzip</span> 压缩
                  </li>
                  <li>
                    对于图片资源,通过 http_accept 判断浏览器是否支持 webp ,若支持,则返回 <span>webp</span> 格式的图片
                  </li>
                  <li>
                    通过 docker + nginx 进行部署, 并将镜像备份于 nexus docker 私服中,从而提高了部署效率、方便版本恢复以及部署迁移
                  </li>
                  <div>
                    优化效果: 项目的首屏时间从<span>4秒</span>降低至<span>1秒</span>以下 
                  </div>
                </ul>
              </div> 
              <div>
              4) 编写公共组件库
              </div> 
            </li>
            <div class="div-black"></div>
            <li>后端(微信小程序项目)
              <div>
              1) 负责对微信小程序项目后端的技术选型(<span>koa2</span>),数据库设计(<span>mariadb</span>),<span>项目架构设计</span>(controller + 三层架构等)
              </div>
              <div>
              2) 负责项目的<span>resful api接口</span>设计、<span>koa2中间件</span>开发、<span>单元测试</span>用例的编写
              </div>
              <div>
              3) 定制了统一的接口规范及接口出错处理,减低了开发成本及维护成本
              </div> 
              <div>
              4) 通过 nexus 搭建 npm 私服及<span>docker私服</span>并把后台及后端项目部署于<span>docker</span>,降低项目部署成本以及版本恢复成本
              </div> 
              <div>
              5) 搭建了<span>elk后台监控上报系统</span>,对后端系统进行实时监控
              </div> 
              <div>
              6) 积极推动项目流程优化,能够及时发现项目痛点并落地解决方案
              </div> 
            </li>
          </ul>

          <ul class="description small-screen">
            <li>前端(车联网数据云平台)
              <div>
              1) 基于 <span>@angular</span> + <span>typescript</span> + <span>rxjs</span> 技术栈对车联网数据云平台进行前端开发
              </div>
              <div>
              2) 通过 angular 的依赖注入 + apitree + rxjs 实现了对 api <span>数据接口进行统一封装</span>,使接口模块多系统复用,降低了接口维护成本,规范了整个开发流程,提高了开发效率
              </div>
              <div>
              3) 通过 nginx 对项目进行相关的性能优化：<span>gzip</span> , <span>缓存</span> , <span>webp</span> 等,使项目的首屏时间从<span>4秒</span>降低至<span>1秒</span>以下
              </div> 
              <div>
              4) 编写公共组件库
              </div> 
            </li>
            <div class="div-black"></div>
            <li>后端(微信小程序项目)
              <div>
              1) 负责对微信小程序项目后端的技术选型(<span>koa2</span>),数据库设计(<span>mariadb</span>),<span>项目架构设计</span>(controller + 三层架构等)
              </div>
              <div>
              2) 负责项目的<span>resful api接口</span>设计、<span>koa2中间件</span>开发、<span>单元测试</span>用例的编写
              </div>
              <div>
              3) 定制了统一的接口规范及接口出错处理,减低了开发成本及维护成本
              </div> 
              <div>
              4) 通过nexus搭建npm私服及<span>docker私服</span>并把后台及后端项目部署于<span>docker</span>,降低项目部署成本以及版本恢复成本
              </div> 
              <div>
              5) 搭建了<span>elk后台监控上报系统</span>,对后端系统进行实时监控
              </div> 
              <div>
              6) 积极推动项目流程优化,能够及时发现项目痛点并落地解决方案
              </div> 
            </li>
          </ul>
          
        </li>
      </ul>